generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id         Int          @id @default(autoincrement())
  email      String       @unique @db.VarChar(50)
  password   String
  firstName  String       @db.VarChar(25)
  lastName   String       @db.VarChar(25)
  botaccount botaccount[]
  chaturl    chaturl[]
  message    message[]
}

model botaccount {
  id       Int       @id @default(autoincrement())
  email    String    @db.VarChar(50)
  password String
  name     String    @db.VarChar(25)
  user_id  Int?
  user     user?     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user")
  message  message[]
}

model chaturl {
  id      Int       @id @default(autoincrement())
  name    String?   @db.VarChar(50)
  user_id Int?
  user    user?     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user")
  message message[]
}

model message {
  id             Int         @id @default(autoincrement())
  title          String?     @db.VarChar(50)
  content        String?
  timestamp      DateTime?   @default(now()) @db.Timestamp(6)
  repeating      String?     @default("Does not repeat")
  user_id        Int?
  bot_account_id Int?
  chaturl_id     Int?
  botaccount     botaccount? @relation(fields: [bot_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_botaccount")
  chaturl        chaturl?    @relation(fields: [chaturl_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_chaturl")
  user           user?       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user")
}
